CREATE TABLE fullrows (
	ddates int,
	item_code int,
	price int,
	country varchar(3),
	refunded bit,
	rated int,
	store bit,
	device varchar(7));

CREATE TABLE digital(
idx BIGINT IDENTITY(1,1) NOT NULL PRIMARY KEY,
ddates BIGINT NOT NULL,
item_code BIGINT NOT NULL,
price INT NOT NULL,
country VARCHAR(3) NOT NULL CHECK(country IN('US','CAN')),
device VARCHAR(7) NOT NULL CHECK(device IN ('apple','google')),
rated INT NOT NULL CHECK(rated IN (1,3,5)),
FOREIGN KEY (ddates) REFERENCES calendar(idx),
FOREIGN KEY (item_code) REFERENCES items(idx));

CREATE TABLE device(
idx BIGINT IDENTITY(1,1) NOT NULL PRIMARY KEY,
ddates BIGINT NOT NULL,
item_code BIGINT NOT NULL,
price INT NOT NULL,
country VARCHAR(3) NOT NULL CHECK(country IN('US','CAN')),
store BIT NOT NULL,
refunded BIT NOT NULL,
FOREIGN KEY (ddates) REFERENCES calendar(idx),
FOREIGN KEY (item_code) REFERENCES items(idx));

CREATE TABLE items(
idx bigint IDENTITY(1,1) NOT NULL PRIMARY KEY,
product varchar(15) NOT NULL UNIQUE,
category varchar(15) NULL CHECK(category IN('Digital','Device')))

CREATE PROCEDURE pass_to_device_digital AS
BEGIN
	INSERT INTO device --first step
	(ddates,item_code,price,country,store,refunded)
	SELECT ddates,item_code,price,country,store,refunded
	FROM fullrows
	WHERE item_code>=4;

	INSERT INTO digital --second step
	(ddates,item_code,price,country,device,rated)
	SELECT ddates,item_code,price,country,device,rated
	FROM fullrows
	WHERE item_code<=3;

	DELETE FROM fullrows -- third step
END
GO

-- Bulk inserts
BULK INSERT --table
FROM ---file path
WITH (
	FIRSTROW=2,
	FIELDTERMINATOR=','
	);

CREATE INDEX device_inx
ON device (ddates,item_code,country,store,refunded)

CREATE VIEW dev_ntref_store AS( --change name
SELECT ddates,item_code,SUM(price) AS total_amount,country
FROM device AS dv
WHERE refunded=0 AND store=1 ---change conditions
GROUP BY ddates,item_code,country)

CREATE VIEW digitals AS(
SELECT ddates,item_code,SUM(price) AS revenue,country,device,rated
FROM digital
GROUP BY ddates,item_code,country,device,rated)
