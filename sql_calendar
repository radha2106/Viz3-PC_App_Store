-- Create a recursive CTE to generate dates
-- Set the date range for  dates to be added
DECLARE @Startdate DATE = 'year-month-day';
DECLARE @Enddate DATE = 'year-month-day';

WITH DateRange AS (
    SELECT 
        CAST(@Startdate AS DATE) AS CalendarDate  -- Start date
    UNION ALL
    SELECT 
        DATEADD(DAY, 1, CalendarDate)  -- Increment date by 1 day
    FROM 
        DateRange
    WHERE 
        CalendarDate < @Enddate  -- End date
)
-- Insert into a physical calendar table
SELECT
    ROW_NUMBER() OVER (ORDER BY CalendarDate) AS idx,
    CalendarDate AS ddate,
    YEAR(CalendarDate) AS years,
    MONTH(CalendarDate) AS months,
    FORMAT(CalendarDate, 'MMM') AS months_name,
    DAY(CalendarDate) AS day_number,
    LEFT(DATENAME(DW, CalendarDate),3) AS day_name,
    DATEPART(WEEK, CalendarDate) AS weeks
INTO calendar
FROM 
    DateRange
OPTION (MAXRECURSION 0);

ALTER TABLE calendar
ALTER COLUMN idx bigint NOT NULL;
ALTER TABLE calendar
ADD CONSTRAINT PK_calendar PRIMARY KEY (idx);
ALTER TABLE calendar
ADD CONSTRAINT UQ_calendar UNIQUE (ddate);
